% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster.R
\name{cluster}
\alias{cluster}
\title{Cluster Terms from Enrichment Results}
\usage{
cluster(
  enrichment_results,
  df_names = NULL,
  min_terms = 5,
  min_value = 0.05,
  distance_metric = "kappa",
  distance_cutoff = 0.5,
  merge_strategy = "DAVID",
  membership_cutoff = 0.5
)
}
\arguments{
\item{enrichment_results}{A list of dataframes, each containing enrichment results.
Each dataframe should include at least the columns 'Term', 'GeneID', and 'Padj'.}

\item{df_names}{Optional, a character vector of names for the enrichment result dataframes. Must
match the length of `enrichment_results`. Default is `NULL`.}

\item{min_terms}{Minimum number of terms each final cluster must include}

\item{min_value}{Minimum 'Pvalue' a term must have in order to be counted in final clustering}

\item{distance_metric}{A string specifying the distance metric to use (e.g., "kappa").}

\item{distance_cutoff}{A numeric value for the distance cutoff (0 < cutoff <= 1).}

\item{merge_strategy}{A string specifying the merge strategy to use (e.g., "DAVID").}

\item{membership_cutoff}{A numeric value between 0 and 1 for the membership cutoff.}
}
\value{
A named list containing:
        - `distance_matrix`: The distance matrix used in clustering.
        - `clusters`: The final clusters.
        - `df_list`: The original list of enrichment result dataframes.
        - `merged_df`: The merged dataframe containing combined results.
        - `cluster_options`: A list of clustering parameters used in the analysis.
        - `df_names` (optional): The names of the input dataframes if provided.
}
\description{
This function performs clustering on enrichment results by integrating
gene similarity scores and various clustering strategies.
}
\examples{
enrichment_results <- list(
  df1 = data.frame(Term = c("A", "B"), GeneID = c("gene1", "gene2"), Padj = c(0.01, 0.02)),
  df2 = data.frame(Term = c("A", "C"), GeneID = c("gene3", "gene4"), Padj = c(0.03, 0.04))
)
result <- cluster(enrichment_results, distance_metric = "kappa", distance_cutoff = 0.5)
print(result$distance_matrix)
}
